{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/print","result":{"data":{"deck":{"id":"4d4fded2-e47d-5b05-b99d-5785d0ddf123","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = BwTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"h1\", null, \"Couchbase is Cool\"), mdx(\"h3\", null, \"A Brief introduction to Couchbase\")), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"h1\", null, \"Agenda\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What is Couchbase?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How does it work?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"N1QL\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pros and Cons\"))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"div\", {\n    style: {\n      \"textAlign\": \"center\"\n    }\n  }, mdx(\"img\", {\n    \"src\": \"https://cdn.iconscout.com/icon/free/png-256/couchbase-1-285194.png\",\n    \"alt\": null\n  })), mdx(\"br\", null), mdx(\"small\", null, \"Couchbase is a distributed NoSQL document store offering high-availability, complete with ACID compliance, memory-first architecture, and a SQL(ish) language for querying.\")), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(Split34, {\n    mdxType: \"Split34\"\n  }, mdx(\"div\", null, mdx(\"h3\", null, \"NoSQL\"), mdx(\"small\", null, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Documents instead of rows/columns\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Flexible schema\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Data locality \")))), mdx(\"div\", null, mdx(\"img\", {\n    \"src\": \"https://cdn.iconscout.com/icon/free/png-256/couchbase-1-285194.png\",\n    \"alt\": null\n  })))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(Split34, {\n    mdxType: \"Split34\"\n  }, mdx(\"div\", null, mdx(\"h3\", null, \"Distributed\"), mdx(\"small\", null, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Data spread across multiple nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"High availability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cross data center replication available\")))), mdx(\"div\", null, mdx(\"img\", {\n    \"src\": \"https://cdn.iconscout.com/icon/free/png-256/couchbase-1-285194.png\",\n    \"alt\": null\n  })))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(Split34, {\n    mdxType: \"Split34\"\n  }, mdx(\"div\", null, mdx(\"h3\", null, \"ACID Compliant\"), mdx(\"small\", null, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Distributed transactions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Durable data \")))), mdx(\"div\", null, mdx(\"img\", {\n    \"src\": \"https://cdn.iconscout.com/icon/free/png-256/couchbase-1-285194.png\",\n    \"alt\": null\n  })))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(Split34, {\n    mdxType: \"Split34\"\n  }, mdx(\"div\", null, mdx(\"h3\", null, \"SQL(ish)\"), mdx(\"small\", null, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"N1QL query language\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JSON-centric SQL\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Declarative and ad-hoc\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Supports \")))), mdx(\"div\", null, mdx(\"img\", {\n    \"src\": \"https://cdn.iconscout.com/icon/free/png-256/couchbase-1-285194.png\",\n    \"alt\": null\n  })))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"h3\", null, \"How Are Documents Stored/Retrieved?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Documents get assigned a unique key\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Documents stored via key in buckets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Buckets distributed across nodes in a cluster\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Client responsible for locating proper node based on key\"))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"h3\", null, \"Sharding or Distribution\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Buckets split into vBuckets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Each vBuckets has an active and replica\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An active and replica of the same vBucket cannot reside on the same node\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hashing of the key used to determine which vBucket\"))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"div\", {\n    style: {\n      \"textAlign\": \"center\"\n    }\n  }, mdx(\"img\", {\n    style: {\n      \"width\": \"80%\",\n      \"border\": \"1px solid black\",\n      \"borderRadius\": \"3px\"\n    },\n    src: \"https://res.cloudinary.com/dangoslen/image/upload/v1593715150/dangoslen.me/vbucketToNodeMapping_j7ygvk.png\"\n  }))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"h1\", null, \"Bucket Types\")), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"h2\", null, \"Couchbase Bucket\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\\"Standard\\\" bucket\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Full replication and data persistence\"))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"h2\", null, \"Ephemeral Bucket\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Memory-only\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Full replication available\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Think data-grid\"))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"h2\", null, \"Memcached Bucket\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Memory-only\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No replication available\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Think cache for another datastore\"))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"h1\", null, \"N1QL\"), mdx(\"h2\", null, mdx(\"em\", {\n    parentName: \"h2\"\n  }, \"Declartive queries for JSON documents\"))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"h2\", null, \"N1QL can ...\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Query arrays and items in an array\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Query sub-documents\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Join documents\"))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"h2\", null, \"JSON Schema\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-data-json\"\n  }), \"{\\n    name: \\u201Cname\\u201D,\\n    ingredients: [\\n        { \\n            name: \\u201Cname\\u201D,\\n            ...\\n        }\\n    ],\\n    ...\\n}\\n\"))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"h2\", null, \"Example Queries\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-language-sql\"\n  }), \"// Select the first ingredient\\nSELECT ingredients[0] FROM recipes;\\n\\n// Count the ingredients in each recipe\\nSELECT ARRAY_LENGTH(ingredients) FROM recipes;\\n\\n// Find recipes with basil \\nSELECT recipe FROM recipes\\nWHERE ANY ingredient IN ingredients \\n  SATISFIES ingredient.name = \\u2018basil\\u2019\\n\"))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"h1\", null, \"Pros\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Couchbase is very flexible\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Great SDK (my personal experience)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Great docs \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Available as a docker container - easy to download and run\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Administration is done via web user interface\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Documents are compressed for storage efficiency \"))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"h1\", null, \"Cons\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"N1QL is generally slower than traditional SQL \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Proper indexing!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No good \\u201Cmigration management\\u201D tool for creating buckets or indexes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Limit on the size of a document is 20 Mb\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"30 bucket limit per cluster\"))), mdx(\"hr\", null), mdx(Preso, {\n    mdxType: \"Preso\"\n  }, mdx(\"h1\", null, \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.couchbase.com/server/current/learn/architecture-overview.html\"\n  }), \"Starting Point of Docs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://query-tutorial.couchbase.com/tutorial/#1\"\n  }), \"N1QL Tutorial\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.couchbase.com/server/current/n1ql/query.html\"\n  }), \"More on N1QL\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.couchbase.com/java-sdk/3.0/hello-world/start-using-sdk.html\"\n  }), \"SDK Tutorial\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.couchbase.com/server/6.5/install/getting-started-docker.html\"\n  }), \"Couchbase Docker Image\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"Thanks! \\uD83D\\uDC4B\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"4d4fded2-e47d-5b05-b99d-5785d0ddf123","slug":"","title":"Couchbase is Cool"}}}